apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  labels:
    app: redis
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: 缓存数据库
spec:
  ports:
    - port: 6379
      name: redis
      targetPort: 6379
    - port: 16379
      name: gossip
      targetPort: 16379
  clusterIP: None
  selector:
    app: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
  labels:
    app: redis
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: 缓存数据库
data:
  init.sh: |
    #!/bin/sh

    CLUSTER_CONFIG="/data/nodes.conf"
    if [ -f ${CLUSTER_CONFIG} ]; then
      if [ -z "${POD_IP}" ]; then
        echo "Unable to determine Pod IP address!"
        exit 1
      fi
      echo "Updating my IP to ${POD_IP} in ${CLUSTER_CONFIG}"
      sed -i.bak -e '/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/'${POD_IP}'/' ${CLUSTER_CONFIG}
    fi
    exec "$@"
  redis.conf: |
    bind 0.0.0.0
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 30000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    databases 16
    dbfilename dump.rdb
    protected-mode no
    daemonize no
    appendonly yes
    pidfile /var/run/redis.pid
    port 6379
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: 缓存数据库
spec:
  serviceName: redis
  podManagementPolicy: OrderedReady
  replicas: 6
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: /redis:6.2.7-alpine
          ports:
            - name: redis
              containerPort: 6379
            - name: gossip
              containerPort: 16379
          command:
            - /conf/init.sh
            - redis-server
            - /conf/redis.conf
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: conf
              mountPath: /conf
            - name: data
              mountPath: /data
      volumes:
        - name: conf
          configMap:
            name: redis
            defaultMode: 0755
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        volumeMode: Filesystem