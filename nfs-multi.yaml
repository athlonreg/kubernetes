apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-nfs-client-provisioner-1
  namespace: kube-system
  labels:
    app: nfs-client-provisioner-1
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-provisioner-runner-1
  labels:
    app: nfs-client-provisioner-1
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: nfs-client-provisioner-1
  name: nfs-nfs-client-provisioner-runner-1
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["nfs-provisioner"]
    verbs: ["use"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-nfs-client-provisioner-1
  labels:
    app: nfs-client-provisioner-1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfs-nfs-client-provisioner-runner-1
subjects:
  - kind: ServiceAccount
    name: nfs-nfs-client-provisioner-1
    namespace: kube-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-nfs-client-provisioner-1
  namespace: kube-system
  labels:
    app: nfs-client-provisioner-1
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-nfs-client-provisioner-1
  namespace: kube-system
  labels:
    app: nfs-client-provisioner-1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-locking-nfs-nfs-client-provisioner-1
subjects:
  - kind: ServiceAccount
    name: nfs-nfs-client-provisioner-1
    namespace: kube-system
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-nfs-client-provisioner-1
  namespace: kube-system
  labels:
    app: nfs-client-provisioner-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-client-provisioner-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-client-provisioner-1
    spec:
      serviceAccount: nfs-nfs-client-provisioner-1
      serviceAccountName: nfs-nfs-client-provisioner-1
      containers:
        - name: nfs-client-provisioner-1
          image: nfs-subdir-external-provisioner:v4.0.2
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: cluster.local/nfs-nfs-client-provisioner-1
            - name: NFS_SERVER
              value: www.nfs.com
            - name: NFS_PATH
              value: /data
      volumes:
        - name: nfs-client-root
          nfs:
            server: 172.25.11.12
            path: /data/ismart
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: nfs-mongo
  annotations:
    resize.kubesphere.io/enabled: "true"
    resize.kubesphere.io/increase: 10Gi
    resize.kubesphere.io/storage-limit: 10000Gi
    resize.kubesphere.io/threshold: 10%
    restart.kubesphere.io/enabled: "true"
    restart.kubesphere.io/max-time: "300"
    restart.kubesphere.io/online-expansion-support: "true"
  labels:
    app: nfs-client-provisioner-1
parameters:
  archiveOnDelete: "true"
mountOptions:
  - nfsvers=3
  - nolock
provisioner: cluster.local/nfs-nfs-client-provisioner-1
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true